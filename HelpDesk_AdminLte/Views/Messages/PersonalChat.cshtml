@model HelpDesk_AdminLte.Models.Conversation


@using Microsoft.AspNet.Identity
@using HelpDesk_AdminLte.Models
@using HelpDesk_AdminLte.Utilites

@{
    ViewBag.Title = "Беседы";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            @ViewBag.Title

        </h1>
        <ol class="breadcrumb">
            <li>
                <i class="fa fa-fw fa-home"></i>
                @Html.ActionLink("Домашняя", "Index", "Home")
            </li>
            <li class="active">
                @ViewBag.Title

            </li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
         <!-- Direct Chat -->
        <div class="row">

            <div class="col-md-4">
                <row>
                    <div>
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h3 class="box-title">Поддержка</h3>
                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>
                                <!-- /.box-tools -->
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <table id="example1" class="table table-bordered table-striped">

                                    <tbody>
                                        @foreach (var item in (List<UserMiniViewModel>)ViewBag.SupportChat)
                                        {
                                            <tr>

                                                <td>
                                                    <a href="@Url.Action("PersonalChat", "Messages", new { oponentUserID = item.UserID })">
                                                        @Html.ValueFor(modelItem => item.UserName)
                                                    </a>


                                                    <div class="form-group col-md-6">
                                                        @{if (@Html.ValueFor(modelItem => item.Picture) != null)
                                                            {
                                                                try
                                                                {

                                                                    <img class="direct-chat-img" src="@Html.ValueFor(modelItem => item.Picture).ToString()" alt="Photo">
                                                                }
                                                                catch (Exception ex) { }
                                                            }
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    @{ if (item.CountMessage > 0)
                                                        {
                                                    <span data-toggle="tooltip" title="" class="badge bg-light-blue" data-original-title="@Html.ValueFor(modelItem => item.CountMessage) Новых сообщения">@Html.ValueFor(modelItem => item.CountMessage)</span>
                                                            }
                                                        }
                                                </td>
                                            </tr>
                                        }




                                </table>
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                </row>
                @if (User.IsInRole("Support") || User.IsInRole("Admin"))
                {
                <row>
                    <div >
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h3 class="box-title">Клиенты</h3>
                                <div class="box-tools pull-right">
                                    <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                        <i class="fa fa-minus"></i>
                                    </button>
                                </div>
                                <!-- /.box-tools -->
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                               
                                        <table id="example1" class="table table-bordered table-striped">

                                            <tbody>
                                                @foreach (var item in (List<UserMiniViewModel>)ViewBag.ClientChat)
                                                {
                                                    <tr>

                                                        <td>
                                                            <a href="@Url.Action("PersonalChat", "Messages", new { oponentUserId = item.UserID })">
                                                                @Html.DisplayFor(modelItem => item.UserName)
                                                            </a>


                                                            <div class="form-group col-md-6">
                                                                @{if (@Html.ValueFor(modelItem => item.Picture) != null)
                                                                    {
                                                                        try
                                                                        {

                                                                            <img class="direct-chat-img" src="@Html.ValueFor(modelItem => item.Picture).ToString()" alt="Photo">
                                                                        }
                                                                        catch (Exception ex) { }
                                                                    }
                                                                }
                                                            </div>

                                                        </td>
                                                        <td>
                                                            @{ if (item.CountMessage > 0)
                                                                {
                                                                    <span data-toggle="tooltip" title="" class="badge bg-light-blue" data-original-title="@Html.ValueFor(modelItem => item.CountMessage) Новых сообщения">@Html.ValueFor(modelItem => item.CountMessage)</span>
                                                                }
                                                            }
                                                        </td>
                                                    </tr>
                                                                }





</table>
                                    
                                
                            </div>
                            <!-- /.box-body -->
                        </div>
                        <!-- /.box -->
                    </div>
                
                </row>
                }
            </div>
           

            @{
                var oponentUserView = User.Identity.GetUserId() == Model.OneUserID ? new CreateUserConversationViewModel().getById(Model.TwoUserID) : new CreateUserConversationViewModel().getById(Model.OneUserID);
                var @messagesCount = Model.Messages != null ? Model.Messages.Count : 0;
                    }
            <div class="col-md-6" >
                    <!-- DIRECT CHAT PRIMARY -->
                    <div class="box box-primary direct-chat direct-chat-primary">
                        <div class="box-header with-border">
                            <h3 class="box-title">@oponentUserView.UserName</h3>
                            <div class="box-tools pull-right">
                                <span data-toggle="tooltip" title="Соообщений @messagesCount" class="badge bg-light-blue">@messagesCount..</span>
                                <button type="button" class="btn btn-box-tool" data-widget="collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-toggle="tooltip" title="Contacts" data-widget="chat-pane-toggle">
                                    <i class="fa fa-comments"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-times"></i></button>
                            </div>
                        </div>

                        <!-- /.box-header -->
                        <div class="box-body">
                            <div class="direct-chat-messages">
                                @{
                                    if (messagesCount != 0) {

                                        foreach (var msg in Model.Messages)
                                        {

                                            var fromUserView = new CreateUserConversationViewModel().getById(msg.FromUserID);

                                        <!-- Conversations are loaded here -->

                                            if (fromUserView.UserName == @oponentUserView.UserName)
                                            {
                                            <!-- Message. Default to the left -->
                                            <div class="direct-chat-msg">
                                                <div class="direct-chat-info clearfix">
                                                    <span class="direct-chat-name pull-left">@fromUserView.UserName</span>
                                                    <span class="direct-chat-timestamp pull-right">@msg.DateCreate</span>
                                                </div>
                                                <!-- /.direct-chat-info -->
                                                <img class="direct-chat-img" src="@fromUserView.Picture" alt="Message User Image"><!-- /.direct-chat-img -->
                                                <div class="direct-chat-text">
                                                    @msg.Text
                                                </div>
                                                <!-- /.direct-chat-text -->
                                            </div>
                                            <!-- /.direct-chat-msg -->
                                            }
                                            else
                                            {
                                            <!-- Message to the right -->
                                            <div class="direct-chat-msg right">
                                                <div class="direct-chat-info clearfix">
                                                    <span class="direct-chat-name pull-right">@fromUserView.UserName</span>
                                                    <span class="direct-chat-timestamp pull-left">@msg.DateCreate</span>
                                                </div>
                                                <!-- /.direct-chat-info -->
                                                <img class="direct-chat-img" src="@fromUserView.Picture" alt="Message User Image"><!-- /.direct-chat-img -->
                                                <div class="direct-chat-text">
                                                    @msg.Text
                                                </div>
                                                <!-- /.direct-chat-text -->
                                            </div>
                                            <!-- /.direct-chat-msg -->
                                            }
                                        }

                                        <!-- Contacts are loaded here -->
                                        <div class="direct-chat-contacts">
                                            <ul class="contacts-list">
                                                <li>
                                                    <il>

                                                        <a href="#">
                                                            @{ if (@oponentUserView.Picture != null)
                                                                {
                                                                    <img class="contacts-list-img" src="@oponentUserView.Picture" alt="Image">
                                                                }
                                                            }
                                                            <div class="contacts-list-info">
                                                                <span class="contacts-list-name">
                                                                    @oponentUserView.UserName
                                                                    @*<small class="contacts-list-date pull-right"> @oponentUserView.Phone</small>*@
                                                                </span>
                                                            </div>
                                                        </a>

                                                </li>
                                                <li>
                                                    <il>  <div class="ion-ios-telephone" style="align-content:center">  @oponentUserView.Phone</div> </il>
                                                    <il>  <div class="ion-email" style="align-content:center">   @oponentUserView.Email</div> </il>
                                                    <il>  <div class="info">  @oponentUserView.Speciality</div> </il>
                                                    <il>  <div class="info"> @oponentUserView.Departement</div> </il>
                                                    <il>  <div class="info"> @oponentUserView.Company</div> </il>

                                                </li>

                                                <!-- /.contacts-list-info -->
                                                <!-- End Contact Item -->
                                            </ul>
                                            <!-- /.contatcts-list -->
                                        </div>
                                        <!-- /.direct-chat-pane -->

                                    }
                                }
                            </div>
                            <!-- /.box-body -->
                            <div class="box-footer">
                                @using (Html.BeginForm("Create", "Messages"))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.Hidden("opUserId", oponentUserView.UserID);

                                    @Html.Hidden("ConversationID", Model.ConversationID);
                                    @Html.Hidden("FromUserID", User.Identity.GetUserId());
                                    @Html.Hidden("DateCreate", DateTime.Now);
                                    var twoUser = Model.TwoUserID == User.Identity.GetUserId() ? Model.OneUserID : Model.TwoUserID;
                                    @Html.Hidden("ToUserID", twoUser);

                                    <div class="input-group">

                                        <input type="text" name="Text" placeholder="Введите сообщение ..." class="form-control">
                                        <span class="input-group-btn">
                                            <button type="submit" class="btn btn-primary btn-flat">Отправить</button>
                                        </span>
                                    </div>
                                }
                                </div>
                                <div class="box-footer">
                                    @using (Html.BeginForm("Delete", "Messages"))
                                    {
                                        @Html.AntiForgeryToken()

                                        @Html.Hidden("opUserId", oponentUserView.UserID);

                                        @Html.Hidden("conversationID", Model.ConversationID);


                                        <div class="input-group">
                                            <span class="input-group-btn">
                                                <button type="submit" class="btn btn-block btn-warning">Очистить</button>
                                            </span>
                                        </div>
                                    }
                                </div>

                            </div>
                        <!--/.direct-chat -->
                    </div>
                </div>

                <!-- /.col -->
          
        </div>
        <!-- /.row -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
